name: Master Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Make Docker image names available for following steps
        run: |
          echo "LATEST_IMAGE=${{ secrets.DOCKERHUB_REPO_OWNER }}/loancalculator:latest" >> ${GITHUB_ENV}
          echo "TAGGED_IMAGE=${{ secrets.DOCKERHUB_REPO_OWNER }}/loancalculator:$(git log -1 --pretty=%h)" >> ${GITHUB_ENV}


      - name: Declare Merkely Pipeline
        uses: docker://merkely/change:latest
        env:
          MERKELY_COMMAND: declare_pipeline
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
          MERKELY_PIPE_PATH: /github/workspace/Merkelypipe.json


      - name: Build and Publish Docker Image
        run: |
          docker build --file ${PWD}/Dockerfile --tag ${{ env.TAGGED_IMAGE }} ${PWD}
          docker tag ${{ env.TAGGED_IMAGE }} ${{ env.LATEST_IMAGE }}

          echo ${{ secrets.DOCKERHUB_DEPLOY_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_DEPLOY_USERNAME }} --password-stdin

          docker push ${{ env.TAGGED_IMAGE }}
          docker push ${{ env.LATEST_IMAGE }}


      - name: Log Docker Image in Merkely
        uses: docker://merkely/change:latest
        env:
          MERKELY_COMMAND: log_artifact
          MERKELY_FINGERPRINT: docker://${{ env.TAGGED_IMAGE }}
          MERKELY_IS_COMPLIANT: "TRUE"
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
          MERKELY_PIPE_PATH: /github/workspace/Merkelypipe.json


      - name: Run unit tests
        run: |
          # Run the units tests. Writes results to build/test/pytest_unit.xml
          docker run \
              --name container \
              --entrypoint ./entrypoint-unit_test.sh \
              ${{ env.TAGGED_IMAGE }}
          mkdir -p build/test
          docker cp container:/code/build/test/ ${PWD}/build
          docker rm container
          pwd
          ls -al


      - name: Log unit test results in Merkely
        uses: docker://merkely/change:latest
        env:
          MERKELY_COMMAND: log_test
          MERKELY_FINGERPRINT: docker://${{ env.TAGGED_IMAGE }}
          MERKELY_EVIDENCE_TYPE: unit_test
          MERKELY_TEST_RESULTS_DIR: /github/workspace/build/test/pytest_unit.xml
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
          MERKELY_PIPE_PATH: /github/workspace/Merkelypipe.json


      - name: Run security analysis and log results in Merkely
        env:
          SECURITY_RESULTS_FILE: build/security/security.xml
        run: |
          # Run the bandit security, write results directly to build/security/security.xml
          mkdir -p build/security
          docker run \
                  --rm \
                  --volume ${PWD}/build:/code/build \
                  --entrypoint ./entrypoint-security.sh \
                  ${{ env.TAGGED_IMAGE }}

          # Log security results in Merkely
          docker run \
              --env MERKELY_COMMAND=log_test \
              --env MERKELY_FINGERPRINT=docker://${{ env.TAGGED_IMAGE }} \
              --env MERKELY_EVIDENCE_TYPE=security \
              --env MERKELY_API_TOKEN=${{ secrets.MERKELY_API_TOKEN }} \
              --env GITHUB_SERVER_URL \
              --env GITHUB_REPOSITORY \
              --env GITHUB_RUN_ID \
              --rm \
              --volume ${PWD}/${SECURITY_RESULTS_FILE}:/data/junit/junit.xml \
              --volume ${PWD}/Merkelypipe.json:/data/Merkelypipe.json \
              --volume /var/run/docker.sock:/var/run/docker.sock \
              merkely/change


      - name: Run coverage and log results in Merkely
        run: |
          # Run coverage, write summary to build/coverage/coverage_summary.sh
          mkdir -p build/coverage
          docker run \
                  --rm \
                  --volume ${PWD}/build:/code/build \
                  --entrypoint ./entrypoint-coverage.sh \
                  ${{ env.TAGGED_IMAGE }}
          source build/coverage/coverage_summary.sh

          # Log coverage summary in Merkely
          docker run \
              --env MERKELY_COMMAND=log_evidence \
              --env MERKELY_FINGERPRINT=docker://${{ env.TAGGED_IMAGE }} \
              --env MERKELY_EVIDENCE_TYPE=coverage \
              --env MERKELY_IS_COMPLIANT=TRUE \
              --env MERKELY_DESCRIPTION="${COVERAGE_SUMMARY}" \
              --env MERKELY_API_TOKEN=${{ secrets.MERKELY_API_TOKEN }} \
              --env GITHUB_SERVER_URL \
              --env GITHUB_REPOSITORY \
              --env GITHUB_RUN_ID \
              --rm \
              --volume /var/run/docker.sock:/var/run/docker.sock \
              --volume ${PWD}/Merkelypipe.json:/data/Merkelypipe.json \
              merkely/change


      - name: Deploy to staging and log deployment in Merkely
        run: |
          # Deploy to staging
          echo YOUR DEPLOYMENT COMMAND HERE

          # Log deployment to staging in Merkely
          docker run \
              --env MERKELY_COMMAND=log_deployment \
              --env MERKELY_FINGERPRINT=docker://${{ env.TAGGED_IMAGE }} \
              --env MERKELY_DESCRIPTION="Deployed to staging in pipeline" \
              --env MERKELY_ENVIRONMENT=staging \
              --env MERKELY_API_TOKEN=${{ secrets.MERKELY_API_TOKEN }} \
              --env GITHUB_SERVER_URL \
              --env GITHUB_REPOSITORY \
              --env GITHUB_RUN_ID \
              --rm \
              --volume /var/run/docker.sock:/var/run/docker.sock \
              --volume ${PWD}/Merkelypipe.json:/data/Merkelypipe.json \
              merkely/change
