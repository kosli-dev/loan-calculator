name: 1/3 Master Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2


      - name: Add MERKELY_OWNER, MERKELY_PIPELINE to GITHUB_ENV
        run: |
          cat ./env-files/github.env >> ${GITHUB_ENV}


      - name: Add Docker image names to GITHUB_ENV
        run: |
          echo "IMAGE_TAGGED=${{ secrets.DOCKERHUB_REPO_OWNER }}/loancalculator:$(git log -1 --pretty=%h)" >> ${GITHUB_ENV}
          echo "IMAGE_LATEST=${{ secrets.DOCKERHUB_REPO_OWNER }}/loancalculator:latest" >> ${GITHUB_ENV}


      - name: Declare Merkely pipeline
        uses: docker://merkely/change:latest
        env:
          MERKELY_COMMAND: declare_pipeline
          MERKELY_OWNER: ${{ env.MERKELY_OWNER }}
          MERKELY_PIPELINE: ${{ env.MERKELY_PIPELINE }}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
          MERKELY_PIPE_PATH: ${{ github.workspace }}/Merkelypipe.json


      - name: Build and publish Docker image
        run: |
          docker build --file ${PWD}/Dockerfile --tag ${{ env.IMAGE_TAGGED }} ${PWD}
          docker tag ${{ env.IMAGE_TAGGED }} ${{ env.IMAGE_LATEST }}
          echo ${{ secrets.DOCKERHUB_DEPLOY_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_DEPLOY_USERNAME }} --password-stdin
          docker push ${{ env.IMAGE_TAGGED }}
          docker push ${{ env.IMAGE_LATEST }}


      - name: Log Docker image in Merkely
        uses: docker://merkely/change:latest
        env:
          MERKELY_COMMAND: log_artifact
          MERKELY_FINGERPRINT: docker://${{ env.IMAGE_TAGGED }}
          MERKELY_IS_COMPLIANT: "TRUE"
          MERKELY_OWNER: ${{ env.MERKELY_OWNER }}
          MERKELY_PIPELINE: ${{ env.MERKELY_PIPELINE }}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}


      - name: Run unit tests
        run: |
          # Write results to ./build/test/
          docker run \
              --name container \
              --entrypoint ./entrypoint-unit_test.sh \
              ${{ env.IMAGE_TAGGED }}
          mkdir -p build/test
          docker cp container:/code/build/test/ ${PWD}/build
          docker rm container


      - name: Log unit test results in Merkely
        uses: docker://merkely/change:latest
        env:
          MERKELY_COMMAND: log_test
          MERKELY_FINGERPRINT: docker://${{ env.IMAGE_TAGGED }}
          MERKELY_EVIDENCE_TYPE: unit_test
          MERKELY_TEST_RESULTS_DIR: ${{ github.workspace }}/build/test
          MERKELY_OWNER: ${{ env.MERKELY_OWNER }}
          MERKELY_PIPELINE: ${{ env.MERKELY_PIPELINE }}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}


      - name: Run security analysis
        run: |
          # Run bandit security. Write results to ./build/security/
          mkdir -p build/security
          docker run \
                  --rm \
                  --volume ${PWD}/build:/code/build \
                  --entrypoint ./entrypoint-security.sh \
                  ${{ env.IMAGE_TAGGED }}


      - name: Log security results in Merkely
        uses: docker://merkely/change:latest
        env:
          MERKELY_COMMAND: log_test
          MERKELY_FINGERPRINT: docker://${{ env.IMAGE_TAGGED }}
          MERKELY_EVIDENCE_TYPE: security
          MERKELY_TEST_RESULTS_DIR: ${{ github.workspace }}/build/security
          MERKELY_OWNER: ${{ env.MERKELY_OWNER }}
          MERKELY_PIPELINE: ${{ env.MERKELY_PIPELINE }}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}


      - name: Run coverage
        run: |
          # Write summary to build/coverage/coverage_summary.sh
          mkdir -p build/coverage
          docker run \
                  --rm \
                  --volume ${PWD}/build:/code/build \
                  --entrypoint ./entrypoint-coverage.sh \
                  ${{ env.IMAGE_TAGGED }}
          source build/coverage/coverage_summary.sh
          echo "COVERAGE_SUMMARY=${COVERAGE_SUMMARY}" >> ${GITHUB_ENV}


      - name: Log coverage results in Merkely
        uses: docker://merkely/change:latest
        env:
          MERKELY_COMMAND: log_evidence
          MERKELY_FINGERPRINT: docker://${{ env.IMAGE_TAGGED }}
          MERKELY_EVIDENCE_TYPE: coverage
          MERKELY_IS_COMPLIANT: "TRUE"
          MERKELY_DESCRIPTION: ${{ env.COVERAGE_SUMMARY }}
          MERKELY_OWNER: ${{ env.MERKELY_OWNER }}
          MERKELY_PIPELINE: ${{ env.MERKELY_PIPELINE }}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}


      - name: Deploy to staging
        run: |
          echo YOUR DEPLOYMENT COMMAND HERE


      - name: Log deployment to staging in Merkely
        uses: docker://merkely/change:latest
        env:
          MERKELY_COMMAND: log_deployment
          MERKELY_FINGERPRINT: docker://${{ env.IMAGE_TAGGED }}
          MERKELY_DESCRIPTION: "Deployed to staging in github pipeline"
          MERKELY_ENVIRONMENT: staging
          MERKELY_OWNER: ${{ env.MERKELY_OWNER }}
          MERKELY_PIPELINE: ${{ env.MERKELY_PIPELINE }}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
