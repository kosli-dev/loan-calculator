name: 3/3 Deploy to Production
on:
  workflow_dispatch:
    inputs:
      deploy_commit:
        description: 'Git commit-ish to deploy'
        required: true
        default: 'main'


env:
  MERKELY_OWNER: compliancedb
  MERKELY_PIPELINE: loancalculator
  MERKELY_CLI_VERSION: "1.1.0"
  IMAGE_NAME: merkely/loancalculator

jobs:
  production_deploy:

    # This is a manually triggered workflow to deploy to production
    # Runs from production branch
    # Do deploy, Log deploy, Merge with main branch
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        # fetch full history
        fetch-depth: 0
        ref: ${{ github.event.inputs.deploy_commit }}


    - name: Add Docker image name to GITHUB_ENV
      run: |
        echo "IMAGE_TAGGED=${{ env.IMAGE_NAME }}:$(git log -1 --pretty=%h)" >> ${GITHUB_ENV}


    - name: Download Merkely cli client
      id: download-merkely-cli
      run: |
        wget https://github.com/merkely-development/cli/releases/download/v${{ env.MERKELY_CLI_VERSION }}/merkely_${{ env.MERKELY_CLI_VERSION }}_linux_amd64.tar.gz
        tar -xf merkely_${{ env.MERKELY_CLI_VERSION }}_linux_amd64.tar.gz


    - name: Pull the Docker image so Merkely can get its digest
      run: |
        docker pull ${{ env.IMAGE_TAGGED }}


    - name: Short-circuit deployment unless approved for release
      env:
        MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
      run:
        ./merkely pipeline approval assert ${{ env.IMAGE_TAGGED }}
          --artifact-type docker


    - name: Deploy to production
      run: |
        echo YOUR DEPLOYMENT COMMAND HERE


    - name: Report deployment to production in Merkely
      env:
        MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
      run:
        ./merkely pipeline deployment report ${{ env.IMAGE_TAGGED }}
          --artifact-type docker
          --environment production


    - name: Update tracking branch
      run: |
        git checkout --track origin/production
        git merge --ff-only ${{ github.event.inputs.deploy_commit }}
        git push origin production



